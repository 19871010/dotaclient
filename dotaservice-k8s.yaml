apiVersion: v1
kind: Service  # rmq.default.svc.cluster.local
metadata:
  name: rmq
  namespace: default
  labels:
    run: rmq
spec:
  type: ClusterIP
  ports:
   - name: http
     protocol: TCP
     port: 15672
     targetPort: 15672
   - name: amqp
     protocol: TCP
     port: 5672
     targetPort: 5672
  selector:
    run: rmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rmq
spec:
  selector:
    matchLabels:
      run: rmq
  replicas: 1
  template:
    metadata:
      labels:
        run: rmq
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: DoesNotExist
      containers:
      - name: rmq
        image: gcr.io/dotaservice-225201/rmq:3.7-plugins
        ports:
          - name: http
            protocol: TCP
            containerPort: 15672
          - name: amqp
            protocol: TCP
            containerPort: 5672
        resources:
          requests:
            cpu: 150m
            memory: 1024Mi
---
# Preferably use index job, (aka Stateful Job): track:https://github.com/kubernetes/kubernetes/issues/14188
# StatefulSets currently require a Headless Service to be responsible for the network identity of the Pods
apiVersion: v1
kind: Service  # optimizer.default.svc.cluster.local
metadata:
  name: optimizer
  labels:
    run: optimizer
spec:
  ports:
  - port: 29500
    name: gloo
  clusterIP: None
  selector:
    run: optimizer
---
apiVersion: apps/v1
kind: Deployment  # TODO(tzaman): make a StatefulSet
metadata:
  name: optimizer
spec:
  selector:
    matchLabels:
      run: optimizer
  replicas: 1
  template:
    metadata:
      labels:
        run: optimizer
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: DoesNotExist
      volumes:
      - name: gcs-secret
        secret:
          secretName: gcs-admin-secret
          items:
          - key: sa_json
            path: sa_credentials.json
      containers:
      - name: optimizer
        image: gcr.io/dotaservice-225201/dotaclient:latest
        command:
        - python3.7
        - dotaoptimizer.py
        - --ip
        - rmq.default.svc.cluster.local
        volumeMounts:
        - name: gcs-secret
          mountPath: /etc/gcp
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/gcp/sa_credentials.json
        - name: MASTER_ADDR
          value: "pytorch-0.dist.default.svc.cluster.local"
        - name: MASTER_PORT
          value: "29500"
        - name: WORLD_SIZE
          value: "1" 
        ports:
        - name: gloo
          containerPort: 29500
        resources:
          requests:
            cpu: 400m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotaservice-deployment
  labels:
    app: dotaservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dotaservice
  template:
    metadata:
      labels:
        app: dotaservice
    spec:
      nodeSelector:
        cloud.google.com/gke-preemptible: "true"
      containers:
      - name: client
        image: gcr.io/dotaservice-225201/dotaclient:latest
        command:
        - python3.7
        - client.py
        - --ip
        - rmq.default.svc.cluster.local
        resources:
          requests:
            cpu: 100m
      - name: dotaservice
        image: gcr.io/dotaservice-225201/dotaservice:0.3.0f
        ports:
        - containerPort: 13337
        resources:
          requests:
            cpu: 500m
