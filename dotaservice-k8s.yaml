apiVersion: v1
kind: Service  # rmq.default.svc.cluster.local
metadata:
  name: rmq
  namespace: default
  labels:
    run: rmq
spec:
  type: ClusterIP
  ports:
   - name: http
     protocol: TCP
     port: 15672
     targetPort: 15672
   - name: amqp
     protocol: TCP
     port: 5672
     targetPort: 5672
  selector:
    run: rmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rmq
spec:
  selector:
    matchLabels:
      run: rmq
  replicas: 1
  template:
    metadata:
      labels:
        run: rmq
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: DoesNotExist
      containers:
      - name: rmq
        image: gcr.io/dotaservice-225201/rmq:3.7-plugins-a
        ports:
          - name: http
            protocol: TCP
            containerPort: 15672
          - name: amqp
            protocol: TCP
            containerPort: 5672
        resources:
          requests:
            cpu: 200m
            memory: 1408Mi
---
apiVersion: "kubeflow.org/v1beta1"
kind: "PyTorchJob"
metadata:
  name: "optimizer"
spec:
  terminationGracePeriodSeconds: 30
  pytorchReplicaSpecs:
    Master:
      replicas: 1
      restartPolicy: OnFailure
      template: 
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: DoesNotExist
          volumes:
          - name: gcs-secret
            secret:
              secretName: gcs-admin-secret
              items:
              - key: sa_json
                path: sa_credentials.json
          containers:
          - name: pytorch
            image: gcr.io/dotaservice-225201/dotaclient:latest
            command: ["python3.7", "optimizer.py"]
            args: ["--ip", "rmq.default.svc.cluster.local", "--batch-size", "8", "--learning-rate", "1e-4", "--pretrained-model", "runs/Jan08_21-59-02_optimizer-master-0/model_000000769.pt"]
            volumeMounts:
            - name: gcs-secret
              mountPath: /etc/gcp
              readOnly: true
            env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/gcp/sa_credentials.json
            resources:
              requests:
                cpu: 600m
    Worker:
      replicas: 11
      restartPolicy: OnFailure
      template:
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: DoesNotExist
          containers:
          - name: pytorch
            image: gcr.io/dotaservice-225201/dotaclient:latest
            command: ["python3.7", "optimizer.py"]
            args: ["--ip", "rmq.default.svc.cluster.local", "--batch-size", "8", "--learning-rate", "1e-4"]
            resources:
              requests:
                cpu: 600m        
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotaservice-deployment
  labels:
    app: dotaservice
spec:
  replicas: 42
  selector:
    matchLabels:
      app: dotaservice
  template:
    metadata:
      labels:
        app: dotaservice
    spec:
      volumes:
      - name: ramdisk
        emptyDir:
          medium: "Memory"
      nodeSelector:
        cloud.google.com/gke-preemptible: "true"
      containers:
      - name: agent
        image: gcr.io/dotaservice-225201/dotaclient:latest
        command: ["python3.7", "agent.py"]
        args: ["--ip", "rmq.default.svc.cluster.local", "--rollout-size", "99999", "--max-dota-time", "300"]
        resources:
          requests:
            cpu: 700m
      - name: dotaservice
        image: gcr.io/dotaservice-225201/dotaservice:0.3.2
        command: ["python3.7", "-m", "dotaservice"]
        args: ["--action-path", "/ramdisk"]
        volumeMounts:
        - mountPath: /ramdisk
          name: ramdisk
        ports:
        - containerPort: 13337
        resources:
          requests:
            cpu: 800m
            memory: 1536Mi
